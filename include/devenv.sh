#!/bin/sh

##
# The devenv function
#
# This functions generates PREFIX/devenv.sh which can be sourced
#
#	. PREFIX/devenv.sh
#
# in order to setup environment to use packages installed in PREFIX.
#
devenv() {
	# Absolute path to pkgconf
	local pkgconf=${PREFIX}/bin/pkgconf.exe
	# Absolute path to pkg-config
	local pkgconfig=${PREFIX}/bin/pkg-config.exe

	# info search path
	local infopath=${u_prefix}/share/info
	# man seaech path
	local manpath=${u_prefix}/share/man

	cat <<-EOF >${u_prefix}/devenv.sh
		#!/bin/sh

		# devenv.sh generated by ${self}
		#
		# To be installed to ${PREFIX}

		PATH="${u_prefix}/sbin:${u_prefix}/bin:\${PATH}"

		if test \${INCLUDE+y}; then
			INCLUDE='${PREFIX}/include'\;\${INCLUDE}
		else
			INCLUDE='${PREFIX}/include'
		fi

		if test \${LIB+y}; then
			LIB='${PREFIX}/lib'\;\${LIB}
		else
			LIB='${PREFIX}/lib'
		fi

		export INCLUDE
		export LIB

		# If pkgconf/pkg-config is built, use it
		if test -x '${pkgconf}'; then
			PKG_CONFIG='${pkgconf}'
			export PKG_CONFIG
		elif test -x '${pkgconfig}'; then
			PKG_CONFIG='${pkgconfig}'
			export PKG_CONFIG
		else
			unset PKG_CONFIG
		fi

		# If pkgconf/pkg-config is not built, set PKG_CONFIG_* variables
		if test -z "\${PKG_CONFIG}"; then
			export PKG_CONFIG_LIBDIR='${PREFIX}/lib/pkgconfig;${PREFIX}/share/pkgconfig'
			export PKG_CONFIG_PATH=
		else
			unset PKG_CONFIG_LIBDIR
			unset PKG_CONFIG_PATH
		fi

		export CMAKE_PREFIX_PATH='${PREFIX}'

		if test \${INFOPATH+y}; then
			INFOPATH="${infopath}:\${INFOPATH}"
		else
			export INFOPATH='${infopath}'
		fi

		if test \${MANPATH+y}; then
			MANPATH="${manpath}:\${MANPATH}"
		else
			export MANPATH='${manpath}'
		fi
	EOF

	chmod +x ${u_prefix}/devenv.sh
}
